// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        String   @id @default(cuid())
  Auth      Auth     @relation(fields: [authId], references: [id])
  authId    String   @unique @map("auth_id")
}

model User {
  id          String   @id @default(cuid())
  Auth        Auth     @relation(fields: [authId], references: [id])
  Country     Country  @relation(fields: [countryId], references: [id])
  Profile     Profile  @relation(fields: [profileId], references: [id])
  authId      String   @unique @map("auth_id")
  countryId   String   @map("country_id")
  dateOfBirth DateTime @map("date_of_birth")
  deleted     Boolean  @default(false)
  profileId   String   @unique @map("profile_id")
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")
  type        UserType
}

model Country {
  id            String  @id @default(cuid())
  flagEmoji     String? @map("flag_emoji")
  flagSvg       String? @map("flag_svg")
  flagAlt       String? @map("flag_alt")
  nameEng       String  @map("name_eng")
  namePol       String  @map("name_pol")
  phoneCodeRoot String? @map("phone_code_root")
  User          User[]
  // language_id     String
  // Language        Language @relation(fields: [language_id], references: [id])
}

// model Language {
//   id        String    @id @default(cuid())
//   lang_code String
//   name      String
//   Country   Country[]
// }

model Auth {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String // hashed
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")
  createdAt DateTime @default(now()) @map("created_at")
  banned    Boolean  @default(false)
  User      User?
  Admin     Admin?
}

model Profile {
  id       String  @id @default(cuid())
  Media    Media[]
  User     User[]
  bio      String
  lastName String  @map("last_name")
  name     String
  userId   String  @unique @map("user_id")
}

model Media {
  id        String    @id @default(cuid())
  Profile   Profile   @relation(fields: [profileId], references: [id])
  createdAt DateTime  @default(now()) @map("created_at")
  profileId String    @map("profile_id")
  type      MediaType
  url       String
}

enum MediaType {
  AVATAR
  BACKGROUND
}

enum UserType {
  ADMIN
  USER
  MOD
}
